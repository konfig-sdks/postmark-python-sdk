# coding: utf-8

"""
    Postmark API

    Postmark makes sending and receiving email incredibly easy. 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from postmark_python_sdk.pydantic.attachment_collection import AttachmentCollection
from postmark_python_sdk.pydantic.header_collection import HeaderCollection

class EmailWithTemplateRequest(BaseModel):
    from_: str = Field(alias='From')

    # Required if 'TemplateId' is not specified.
    template_alias: str = Field(alias='TemplateAlias')

    # Required if 'TemplateAlias' is not specified.
    template_id: int = Field(alias='TemplateId')

    template_model: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(alias='TemplateModel')

    to: str = Field(alias='To')

    attachments: typing.Optional[AttachmentCollection] = Field(None, alias='Attachments')

    bcc: typing.Optional[str] = Field(None, alias='Bcc')

    cc: typing.Optional[str] = Field(None, alias='Cc')

    headers: typing.Optional[HeaderCollection] = Field(None, alias='Headers')

    inline_css: typing.Optional[bool] = Field(None, alias='InlineCss')

    reply_to: typing.Optional[str] = Field(None, alias='ReplyTo')

    tag: typing.Optional[str] = Field(None, alias='Tag')

    # Replace links in content to enable \"click tracking\" stats. Default is 'null', which uses the server's LinkTracking setting'.
    track_links: typing.Optional[Literal["None", "HtmlAndText", "HtmlOnly", "TextOnly"]] = Field(None, alias='TrackLinks')

    # Activate open tracking for this email.
    track_opens: typing.Optional[bool] = Field(None, alias='TrackOpens')
    class Config:
        arbitrary_types_allowed = True
