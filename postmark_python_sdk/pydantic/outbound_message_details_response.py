# coding: utf-8

"""
    Postmark API

    Postmark makes sending and receiving email incredibly easy. 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from postmark_python_sdk.pydantic.attachment_collection import AttachmentCollection
from postmark_python_sdk.pydantic.email_name_address_pair import EmailNameAddressPair
from postmark_python_sdk.pydantic.message_event_details import MessageEventDetails

class OutboundMessageDetailsResponse(BaseModel):
    attachments: typing.Optional[AttachmentCollection] = Field(None, alias='Attachments')

    bcc: typing.Optional[typing.List[EmailNameAddressPair]] = Field(None, alias='Bcc')

    body: typing.Optional[str] = Field(None, alias='Body')

    cc: typing.Optional[typing.List[EmailNameAddressPair]] = Field(None, alias='Cc')

    from_: typing.Optional[str] = Field(None, alias='From')

    html_body: typing.Optional[str] = Field(None, alias='HtmlBody')

    message_events: typing.Optional[typing.List[MessageEventDetails]] = Field(None, alias='MessageEvents')

    message_i_d: typing.Optional[str] = Field(None, alias='MessageID')

    received_at: typing.Optional[datetime] = Field(None, alias='ReceivedAt')

    recipients: typing.Optional[typing.List[str]] = Field(None, alias='Recipients')

    status: typing.Optional[str] = Field(None, alias='Status')

    subject: typing.Optional[str] = Field(None, alias='Subject')

    tag: typing.Optional[str] = Field(None, alias='Tag')

    text_body: typing.Optional[str] = Field(None, alias='TextBody')

    to: typing.Optional[typing.List[EmailNameAddressPair]] = Field(None, alias='To')

    track_links: typing.Optional[Literal["None", "HtmlAndText", "HtmlOnly", "TextOnly"]] = Field(None, alias='TrackLinks')

    track_opens: typing.Optional[bool] = Field(None, alias='TrackOpens')
    class Config:
        arbitrary_types_allowed = True
