# coding: utf-8

"""
    Postmark API

    Postmark makes sending and receiving email incredibly easy. 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class OutboundOverviewStatsResponse(BaseModel):
    bounce_rate: typing.Optional[int] = Field(None, alias='BounceRate')

    bounced: typing.Optional[int] = Field(None, alias='Bounced')

    opens: typing.Optional[int] = Field(None, alias='Opens')

    s_m_t_p_a_p_i_errors: typing.Optional[int] = Field(None, alias='SMTPAPIErrors')

    sent: typing.Optional[int] = Field(None, alias='Sent')

    spam_complaints: typing.Optional[int] = Field(None, alias='SpamComplaints')

    spam_complaints_rate: typing.Optional[int] = Field(None, alias='SpamComplaintsRate')

    total_clicks: typing.Optional[int] = Field(None, alias='TotalClicks')

    total_tracked_links_sent: typing.Optional[int] = Field(None, alias='TotalTrackedLinksSent')

    tracked: typing.Optional[int] = Field(None, alias='Tracked')

    unique_links_clicked: typing.Optional[int] = Field(None, alias='UniqueLinksClicked')

    unique_opens: typing.Optional[int] = Field(None, alias='UniqueOpens')

    with_client_recorded: typing.Optional[int] = Field(None, alias='WithClientRecorded')

    with_link_tracking: typing.Optional[int] = Field(None, alias='WithLinkTracking')

    with_open_tracking: typing.Optional[int] = Field(None, alias='WithOpenTracking')

    with_platform_recorded: typing.Optional[int] = Field(None, alias='WithPlatformRecorded')
    class Config:
        arbitrary_types_allowed = True
