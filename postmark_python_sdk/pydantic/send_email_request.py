# coding: utf-8

"""
    Postmark API

    Postmark makes sending and receiving email incredibly easy. 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from postmark_python_sdk.pydantic.attachment_collection import AttachmentCollection
from postmark_python_sdk.pydantic.header_collection import HeaderCollection

class SendEmailRequest(BaseModel):
    attachments: typing.Optional[AttachmentCollection] = Field(None, alias='Attachments')

    # Bcc recipient email address. Multiple addresses are comma seperated. Max 50.
    bcc: typing.Optional[str] = Field(None, alias='Bcc')

    # Recipient email address. Multiple addresses are comma seperated. Max 50.
    cc: typing.Optional[str] = Field(None, alias='Cc')

    # The sender email address. Must have a registered and confirmed Sender Signature.
    from_: typing.Optional[str] = Field(None, alias='From')

    headers: typing.Optional[HeaderCollection] = Field(None, alias='Headers')

    # If no TextBody specified HTML email message
    html_body: typing.Optional[str] = Field(None, alias='HtmlBody')

    # Reply To override email address. Defaults to the Reply To set in the sender signature.
    reply_to: typing.Optional[str] = Field(None, alias='ReplyTo')

    # Email Subject
    subject: typing.Optional[str] = Field(None, alias='Subject')

    # Email tag that allows you to categorize outgoing emails and get detailed statistics.
    tag: typing.Optional[str] = Field(None, alias='Tag')

    # If no HtmlBody specified Plain text email message
    text_body: typing.Optional[str] = Field(None, alias='TextBody')

    # Recipient email address. Multiple addresses are comma seperated. Max 50.
    to: typing.Optional[str] = Field(None, alias='To')

    # Replace links in content to enable \"click tracking\" stats. Default is 'null', which uses the server's LinkTracking setting'.
    track_links: typing.Optional[Literal["None", "HtmlAndText", "HtmlOnly", "TextOnly"]] = Field(None, alias='TrackLinks')

    # Activate open tracking for this email.
    track_opens: typing.Optional[bool] = Field(None, alias='TrackOpens')
    class Config:
        arbitrary_types_allowed = True
